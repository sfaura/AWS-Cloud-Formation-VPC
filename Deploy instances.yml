AWSTemplateFormatVersion: 2010-09-09
Description: Instancias

Parameters:

  IdImagen:
    Type: String
    Description: Imagen para la instancia (Amazon Linux 2 AMI ami-07d9160fa81ccffb5, Ubuntu Server 18.04 ami-089cc16f7f08c4457)
    AllowedValues: 
     - ami-07d9160fa81ccffb5
     - ami-089cc16f7f08c4457
    Default: ami-07d9160fa81ccffb5

  TipoInstancia:
    Type: String
    Description: Tipo de instancia
    AllowedValues:
      - t2.micro
      - t2.small
    Default: t2.micro

  ParClave:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Par de claves para acceder a la instancia
    AllowedPattern: .+
    ConstraintDescription: Es obligatorio seleccionar un par de claves


Resources: 

  myStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://myfirstvpcdeploycf.s3-eu-west-1.amazonaws.com/MyFirstVPCDeployCF.yml
      TimeoutInMinutes: '60'

  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref ParClave
      ImageId: !Ref IdImagen
      InstanceType: !Ref TipoInstancia
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      UserData: !Base64 |
       "#!/bin/bash -xe",
                "sudo yum update -y",
                "sudo yum install httpd -y",
                "sudo /etc/init.d/httpd start",
                "echo \"<html><body><h1>Cagontal!!</h1>\" > /var/www/html/index.html",
                "echo \"</body></html>\" >> /var/www/html/index.html"

Outputs:
  URL:
    Description: URL of the sample website
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - myEC2Instance
          - PublicDnsName
  
  StackRef:
    Value: !Ref myStack   
  OutputFromNestedStack:
    Value: !GetAtt myStack.Outputs.FrontSG
